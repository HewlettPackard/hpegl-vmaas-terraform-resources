vars:
  http_name: tf_HTTP_MONITOR_%rand_int
  https_name: tf_HTTPS_MONITOR_%rand_int
  icmp_name: tf_ICMP_MONITOR_%rand_int
  passive_name: tf_PASSIVE_MONITOR_%rand_int
  tcp_name: tf_TCP_MONITOR_%rand_int
  udp_name: tf_UDP-MONITOR_%rand_int
acc:
- config: |
    lb_id = data.hpegl_vmaas_load_balancer.tf_lb.id 
    name  =  "$(http_name)"      
    description  = "HTTP_MONITOR creating using tf"
    type = "LBHttpMonitorProfile"
    http_monitor {
      fall_count = 8
      interval =  10  
      monitor_port = 50
      rise_count = 5
      timeout = 30
      request_body = "request input body data"
      request_method = "GET"
      request_url = "https://request.com"
      request_version  = "HTTP_VERSION_1_0" 
      response_data = "Failed"
      response_status_codes  = "500"
    }
  validations:
    json.loadBalancerMonitor.monitorType: "LBHttpMonitorProfile"
- config: |
    lb_id = data.hpegl_vmaas_load_balancer.tf_lb.id 
    name  =  "$(https_name)"        
    description  = "HTTPS_MONITOR creating using tf"
    type = "LBHttpsMonitorProfile"
    https_monitor {
      fall_count = 3
      interval =  5  
      monitor_port = 80
      rise_count = 3
      timeout = 15
      request_body = "request input body data"
      request_method = "GET"
      request_url = "https://test.com"
      request_version  = "HTTP_VERSION_1_1" 
      response_data = "success"
      response_status_codes  = "201,200"
    }
  validations:
    json.loadBalancerMonitor.monitorType: "LBHttpsMonitorProfile"
- config: |
    lb_id = data.hpegl_vmaas_load_balancer.tf_lb.id 
    name  =  "$(icmp_name)"        
    description  = "ICMP_MONITOR update using tf"
    type = "LBIcmpMonitorProfile"
    icmp_monitor {
      fall_count = 30
      interval =  50 
      monitor_port = 8
      rise_count = 3
      timeout = 15
      data_length = 32
    }
  validations:
    json.loadBalancerMonitor.monitorType: "LBIcmpMonitorProfile"
- config: |
    lb_id = data.hpegl_vmaas_load_balancer.tf_lb.id 
    name  =  "$(passive_name)"        
    description  = "PASSIVE_MONITOR create using tf"
    type = "LBPassiveMonitorProfile"
    passive_monitor {
      timeout = 15
      max_fail = 5
    }
  validations:
    json.loadBalancerMonitor.monitorType: "LBPassiveMonitorProfile"
- config: |
    lb_id = data.hpegl_vmaas_load_balancer.tf_lb.id 
    name  =  "$(tcp_name)"        
    description  = "TCP_MONITOR create using tf"
    type = "LBTcpMonitorProfile"
    tcp_monitor {
      fall_count = 3
      interval =  5 
      monitor_port = 80
      rise_count = 3
      timeout = 15
      request_body = "request body data"
      response_data = "success"
    }
  validations:
    json.loadBalancerMonitor.monitorType: "LBTcpMonitorProfile"
- config: |
    lb_id = data.hpegl_vmaas_load_balancer.tf_lb.id
    name  =  "$(udp_name)"       
    description  = "UDP_MONITOR create using tf"
    type = "LBUdpMonitorProfile"
    udp_monitor {
      fall_count = 3
      interval =  5 
      monitor_port = 80
      rise_count = 3
      timeout = 15
      request_body = "request body data"
      response_data = "success"
    }
  validations:
    json.loadBalancerMonitor.monitorType: "LBUdpMonitorProfile"

name: Dev Acceptance Tests for CI CD

on:
  workflow_dispatch:

jobs:
  test-provider:
    uses: ./.github/workflows/reusable-dev-acc.yml
    with:
      test_case: TestProvider
      test_description: Check for valid terraform provider
    secrets: inherit

  test-datasouces:
    needs: 
      - test-provider
    if: "${{ needs.test-provider.result == 'success' }}"
    uses: ./.github/workflows/reusable-dev-acc.yml
    with:
      test_case: TestAccDataSource
      test_description: All data source test
    secrets: inherit

  test-vmaas-instance:
    uses: ./.github/workflows/reusable-dev-acc.yml
    needs: 
      - test-datasouces
    if: "${{ needs.test-provider.result == 'success' }}"
    with:
      test_case: TestVmaasInstance TestAccResourceInstance
      test_description: Instance test
    secrets: inherit

  test-vmaas-lb:
    uses: ./.github/workflows/reusable-dev-acc.yml
    needs: 
      - test-vmaas-instance
    if: "${{ needs.test-provider.result == 'success' }}"
    with:
      test_case: TestVmaasLB TestAccResourceLB TestVmaasLoadBalancerPlan TestAccResourceLoadBalancerCreate
      test_description: Loadbalancer test
    secrets: inherit

  test-vmaas-network:
    uses: ./.github/workflows/reusable-dev-acc.yml
    needs: 
      - test-vmaas-lb
    if: "${{ needs.test-provider.result == 'success' }}"
    with:
      test_case: TestVmaasNetworkPlan TestAccResourceNetworkCreate TestAccResourceRouter TestVmaasRouter TestAccResourceTier TestVmaasRouteBGPNeighborPlan
      test_description: Network test
    secrets: inherit

  process-logs:
    runs-on: ubuntu-20.04
    needs:
      - test-vmaas-network
    if: "always()"
    steps:
      - name: Checkout workspace
        uses: actions/checkout@v4
      - name: Download logs
        id: logs
        uses: actions/download-artifact@v4
        with:
          path: tmp/artifacts
          merge-multiple: true
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Print Result and Publish
        run: | 
          LOG_RESULT=$(python .github/parse_logs.py '${{ steps.logs.outputs.download-path }}')
          echo $LOG_RESULT

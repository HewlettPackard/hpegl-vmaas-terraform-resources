// Code generated by MockGen. DO NOT EDIT.
// Source: ./retry.go

// Package utils is a generated GoMock package.
package utils

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockscmTokenInterface is a mock of scmTokenInterface interface.
type MockscmTokenInterface struct {
	ctrl     *gomock.Controller
	recorder *MockscmTokenInterfaceMockRecorder
}

// MockscmTokenInterfaceMockRecorder is the mock recorder for MockscmTokenInterface.
type MockscmTokenInterfaceMockRecorder struct {
	mock *MockscmTokenInterface
}

// NewMockscmTokenInterface creates a new mock instance.
func NewMockscmTokenInterface(ctrl *gomock.Controller) *MockscmTokenInterface {
	mock := &MockscmTokenInterface{ctrl: ctrl}
	mock.recorder = &MockscmTokenInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockscmTokenInterface) EXPECT() *MockscmTokenInterfaceMockRecorder {
	return m.recorder
}

// setScmClientToken mocks base method.
func (m *MockscmTokenInterface) setScmClientToken(ctx *context.Context, meta interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "setScmClientToken", ctx, meta)
}

// setScmClientToken indicates an expected call of setScmClientToken.
func (mr *MockscmTokenInterfaceMockRecorder) setScmClientToken(ctx, meta interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "setScmClientToken", reflect.TypeOf((*MockscmTokenInterface)(nil).setScmClientToken), ctx, meta)
}
